---
import { useTranslations } from "../i18n/utils";
const lang = (Astro.url.pathname.split('/')[1] as "es" | "en") || 'es';
const t = useTranslations(lang);
---
<section id="contact" data-section="contact" class="pt-16">
  <div class="px-5">
    <h1 class="text-3xl font-bold bg-gradient-to-r from-cyan-500 to-blue-500 text-transparent bg-clip-text mb-6">
      {t('contact')}
    </h1>
    <div class="max-w-2xl mx-auto p-6 bg-gray-800 rounded-xl shadow-lg">  
      <form id="contact-form" class="space-y-4">
        
        <div>
          <label for="name" class="block mb-1 text-gray-300">{t('nombre')}</label>
          <input type="text" id="name" name="name" required class="w-full px-4 py-2 border border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-700 text-white" placeholder={t('tu-nombre')}/>
        </div>

        <div>
          <label for="email" class="block mb-1 text-gray-300">{t('correo')}</label>
          <input type="email" id="email" name="email" required class="w-full px-4 py-2 border border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-700 text-white" placeholder={t('tu-correo')}/>
        </div>
        
        <div>
          <label for="message" class="block mb-1 text-gray-300">{t('mensaje')}</label>
          <textarea id="message" name="message" rows="5" required class="w-full px-4 py-2 border border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-700 text-white" placeholder={t('tu-mensaje')}></textarea>
        </div>
        
        <button type="submit" id="submit-btn" class="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg transition duration-300">
          {t('enviar-mensaje')}
        </button>
      </form>
      
      <div id="form-status" class="mt-4 p-4 rounded-lg hidden"></div>
    </div>
  </div>
</section>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {   
    const lang = document.documentElement.lang; 
    const contactForm = document.getElementById('contact-form');
    const submitBtn = document.getElementById('submit-btn');
    const statusDiv = document.getElementById('form-status');
    
    if (!contactForm) return;
    
    contactForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      submitBtn.disabled = true;
      if(lang === 'es'){
        submitBtn.textContent = 'Enviando...';
      }else{
        submitBtn.textContent = 'Sending...';
      }
      
      statusDiv.classList.add('hidden');
      
      const formData = new FormData(contactForm);
      const data = Object.fromEntries(formData.entries());
      
      try {
        const response = await fetch('/api/contacto', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data)
        });
        
        const result = await response.json();
        
        if (response.ok) {
          if(lang === 'es') {
            showStatus('success', '¡Mensaje enviado con éxito! Me pondré en contacto contigo pronto.');
          }else{
            showStatus('success', 'Message sent successfully! I’ll get in touch with you soon.');
          }
          contactForm.reset();
        } else {
          if(lang === 'es') {
            showStatus('error', result.error || 'Hubo un error al enviar el mensaje. Por favor, inténtalo de nuevo.');
          }else{
            showStatus('error', result.error || 'There was an error sending the message. Please try again.');
          }
        }
      } catch (error) {
        if(lang === 'es') {
          showStatus('error', 'Error de conexión. Por favor, verifica tu conexión.');
        }else{
          showStatus('error', 'Connection error. Please check your connection.');
        }
      } finally {
        submitBtn.disabled = false;
        if(lang === 'es'){
          submitBtn.textContent = 'Enviar mensaje';
        }else {
          submitBtn.textContent = 'Send me a message';
        }
      }
    });
    
    function showStatus(type, message) {
      statusDiv.textContent = message;
      statusDiv.className = `mt-4 p-4 rounded-lg ${
        type === 'success' 
          ? 'bg-green-100 text-green-700' 
          : 'bg-red-100 text-red-700'
      }`;
      statusDiv.classList.remove('hidden');

      setTimeout(() => {
        statusDiv.classList.add('hidden');
      }, 5000);
    }
  });
</script>